/*
 * Copyright (c) 2017-2019 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <tencentcloud/cwp/v20180228/model/DescribeMalwareTimingScanSettingResponse.h>
#include <tencentcloud/core/utils/rapidjson/document.h>
#include <tencentcloud/core/utils/rapidjson/writer.h>
#include <tencentcloud/core/utils/rapidjson/stringbuffer.h>

using TencentCloud::CoreInternalOutcome;
using namespace TencentCloud::Cwp::V20180228::Model;
using namespace std;

DescribeMalwareTimingScanSettingResponse::DescribeMalwareTimingScanSettingResponse() :
    m_checkPatternHasBeenSet(false),
    m_startTimeHasBeenSet(false),
    m_endTimeHasBeenSet(false),
    m_isGlobalHasBeenSet(false),
    m_quuidListHasBeenSet(false),
    m_monitoringPatternHasBeenSet(false),
    m_cycleHasBeenSet(false),
    m_enableScanHasBeenSet(false),
    m_idHasBeenSet(false),
    m_realTimeMonitoringHasBeenSet(false),
    m_autoIsolationHasBeenSet(false),
    m_clickTimeoutHasBeenSet(false)
{
}

CoreInternalOutcome DescribeMalwareTimingScanSettingResponse::Deserialize(const string &payload)
{
    rapidjson::Document d;
    d.Parse(payload.c_str());
    if (d.HasParseError() || !d.IsObject())
    {
        return CoreInternalOutcome(Error("response not json format"));
    }
    if (!d.HasMember("Response") || !d["Response"].IsObject())
    {
        return CoreInternalOutcome(Error("response `Response` is null or not object"));
    }
    rapidjson::Value &rsp = d["Response"];
    if (!rsp.HasMember("RequestId") || !rsp["RequestId"].IsString())
    {
        return CoreInternalOutcome(Error("response `Response.RequestId` is null or not string"));
    }
    string requestId(rsp["RequestId"].GetString());
    SetRequestId(requestId);

    if (rsp.HasMember("Error"))
    {
        if (!rsp["Error"].IsObject() ||
            !rsp["Error"].HasMember("Code") || !rsp["Error"]["Code"].IsString() ||
            !rsp["Error"].HasMember("Message") || !rsp["Error"]["Message"].IsString())
        {
            return CoreInternalOutcome(Error("response `Response.Error` format error").SetRequestId(requestId));
        }
        string errorCode(rsp["Error"]["Code"].GetString());
        string errorMsg(rsp["Error"]["Message"].GetString());
        return CoreInternalOutcome(Error(errorCode, errorMsg).SetRequestId(requestId));
    }


    if (rsp.HasMember("CheckPattern") && !rsp["CheckPattern"].IsNull())
    {
        if (!rsp["CheckPattern"].IsUint64())
        {
            return CoreInternalOutcome(Error("response `CheckPattern` IsUint64=false incorrectly").SetRequestId(requestId));
        }
        m_checkPattern = rsp["CheckPattern"].GetUint64();
        m_checkPatternHasBeenSet = true;
    }

    if (rsp.HasMember("StartTime") && !rsp["StartTime"].IsNull())
    {
        if (!rsp["StartTime"].IsString())
        {
            return CoreInternalOutcome(Error("response `StartTime` IsString=false incorrectly").SetRequestId(requestId));
        }
        m_startTime = string(rsp["StartTime"].GetString());
        m_startTimeHasBeenSet = true;
    }

    if (rsp.HasMember("EndTime") && !rsp["EndTime"].IsNull())
    {
        if (!rsp["EndTime"].IsString())
        {
            return CoreInternalOutcome(Error("response `EndTime` IsString=false incorrectly").SetRequestId(requestId));
        }
        m_endTime = string(rsp["EndTime"].GetString());
        m_endTimeHasBeenSet = true;
    }

    if (rsp.HasMember("IsGlobal") && !rsp["IsGlobal"].IsNull())
    {
        if (!rsp["IsGlobal"].IsUint64())
        {
            return CoreInternalOutcome(Error("response `IsGlobal` IsUint64=false incorrectly").SetRequestId(requestId));
        }
        m_isGlobal = rsp["IsGlobal"].GetUint64();
        m_isGlobalHasBeenSet = true;
    }

    if (rsp.HasMember("QuuidList") && !rsp["QuuidList"].IsNull())
    {
        if (!rsp["QuuidList"].IsArray())
            return CoreInternalOutcome(Error("response `QuuidList` is not array type"));

        const rapidjson::Value &tmpValue = rsp["QuuidList"];
        for (rapidjson::Value::ConstValueIterator itr = tmpValue.Begin(); itr != tmpValue.End(); ++itr)
        {
            m_quuidList.push_back((*itr).GetString());
        }
        m_quuidListHasBeenSet = true;
    }

    if (rsp.HasMember("MonitoringPattern") && !rsp["MonitoringPattern"].IsNull())
    {
        if (!rsp["MonitoringPattern"].IsUint64())
        {
            return CoreInternalOutcome(Error("response `MonitoringPattern` IsUint64=false incorrectly").SetRequestId(requestId));
        }
        m_monitoringPattern = rsp["MonitoringPattern"].GetUint64();
        m_monitoringPatternHasBeenSet = true;
    }

    if (rsp.HasMember("Cycle") && !rsp["Cycle"].IsNull())
    {
        if (!rsp["Cycle"].IsUint64())
        {
            return CoreInternalOutcome(Error("response `Cycle` IsUint64=false incorrectly").SetRequestId(requestId));
        }
        m_cycle = rsp["Cycle"].GetUint64();
        m_cycleHasBeenSet = true;
    }

    if (rsp.HasMember("EnableScan") && !rsp["EnableScan"].IsNull())
    {
        if (!rsp["EnableScan"].IsInt64())
        {
            return CoreInternalOutcome(Error("response `EnableScan` IsInt64=false incorrectly").SetRequestId(requestId));
        }
        m_enableScan = rsp["EnableScan"].GetInt64();
        m_enableScanHasBeenSet = true;
    }

    if (rsp.HasMember("Id") && !rsp["Id"].IsNull())
    {
        if (!rsp["Id"].IsInt64())
        {
            return CoreInternalOutcome(Error("response `Id` IsInt64=false incorrectly").SetRequestId(requestId));
        }
        m_id = rsp["Id"].GetInt64();
        m_idHasBeenSet = true;
    }

    if (rsp.HasMember("RealTimeMonitoring") && !rsp["RealTimeMonitoring"].IsNull())
    {
        if (!rsp["RealTimeMonitoring"].IsInt64())
        {
            return CoreInternalOutcome(Error("response `RealTimeMonitoring` IsInt64=false incorrectly").SetRequestId(requestId));
        }
        m_realTimeMonitoring = rsp["RealTimeMonitoring"].GetInt64();
        m_realTimeMonitoringHasBeenSet = true;
    }

    if (rsp.HasMember("AutoIsolation") && !rsp["AutoIsolation"].IsNull())
    {
        if (!rsp["AutoIsolation"].IsUint64())
        {
            return CoreInternalOutcome(Error("response `AutoIsolation` IsUint64=false incorrectly").SetRequestId(requestId));
        }
        m_autoIsolation = rsp["AutoIsolation"].GetUint64();
        m_autoIsolationHasBeenSet = true;
    }

    if (rsp.HasMember("ClickTimeout") && !rsp["ClickTimeout"].IsNull())
    {
        if (!rsp["ClickTimeout"].IsUint64())
        {
            return CoreInternalOutcome(Error("response `ClickTimeout` IsUint64=false incorrectly").SetRequestId(requestId));
        }
        m_clickTimeout = rsp["ClickTimeout"].GetUint64();
        m_clickTimeoutHasBeenSet = true;
    }


    return CoreInternalOutcome(true);
}


uint64_t DescribeMalwareTimingScanSettingResponse::GetCheckPattern() const
{
    return m_checkPattern;
}

bool DescribeMalwareTimingScanSettingResponse::CheckPatternHasBeenSet() const
{
    return m_checkPatternHasBeenSet;
}

string DescribeMalwareTimingScanSettingResponse::GetStartTime() const
{
    return m_startTime;
}

bool DescribeMalwareTimingScanSettingResponse::StartTimeHasBeenSet() const
{
    return m_startTimeHasBeenSet;
}

string DescribeMalwareTimingScanSettingResponse::GetEndTime() const
{
    return m_endTime;
}

bool DescribeMalwareTimingScanSettingResponse::EndTimeHasBeenSet() const
{
    return m_endTimeHasBeenSet;
}

uint64_t DescribeMalwareTimingScanSettingResponse::GetIsGlobal() const
{
    return m_isGlobal;
}

bool DescribeMalwareTimingScanSettingResponse::IsGlobalHasBeenSet() const
{
    return m_isGlobalHasBeenSet;
}

vector<string> DescribeMalwareTimingScanSettingResponse::GetQuuidList() const
{
    return m_quuidList;
}

bool DescribeMalwareTimingScanSettingResponse::QuuidListHasBeenSet() const
{
    return m_quuidListHasBeenSet;
}

uint64_t DescribeMalwareTimingScanSettingResponse::GetMonitoringPattern() const
{
    return m_monitoringPattern;
}

bool DescribeMalwareTimingScanSettingResponse::MonitoringPatternHasBeenSet() const
{
    return m_monitoringPatternHasBeenSet;
}

uint64_t DescribeMalwareTimingScanSettingResponse::GetCycle() const
{
    return m_cycle;
}

bool DescribeMalwareTimingScanSettingResponse::CycleHasBeenSet() const
{
    return m_cycleHasBeenSet;
}

int64_t DescribeMalwareTimingScanSettingResponse::GetEnableScan() const
{
    return m_enableScan;
}

bool DescribeMalwareTimingScanSettingResponse::EnableScanHasBeenSet() const
{
    return m_enableScanHasBeenSet;
}

int64_t DescribeMalwareTimingScanSettingResponse::GetId() const
{
    return m_id;
}

bool DescribeMalwareTimingScanSettingResponse::IdHasBeenSet() const
{
    return m_idHasBeenSet;
}

int64_t DescribeMalwareTimingScanSettingResponse::GetRealTimeMonitoring() const
{
    return m_realTimeMonitoring;
}

bool DescribeMalwareTimingScanSettingResponse::RealTimeMonitoringHasBeenSet() const
{
    return m_realTimeMonitoringHasBeenSet;
}

uint64_t DescribeMalwareTimingScanSettingResponse::GetAutoIsolation() const
{
    return m_autoIsolation;
}

bool DescribeMalwareTimingScanSettingResponse::AutoIsolationHasBeenSet() const
{
    return m_autoIsolationHasBeenSet;
}

uint64_t DescribeMalwareTimingScanSettingResponse::GetClickTimeout() const
{
    return m_clickTimeout;
}

bool DescribeMalwareTimingScanSettingResponse::ClickTimeoutHasBeenSet() const
{
    return m_clickTimeoutHasBeenSet;
}


